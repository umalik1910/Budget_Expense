@model  final_budget_expense.Models.BudgetRecordViewModel
@{
    Layout = null;
}
@if (Model.User != null)
{
    <p id="user_id">@Model.User.UserID</p>
}
<div id="tableBody">
    @Html.DropDownListFor(x => Model.SelectedMonth, new SelectList(Model.Months), htmlAttributes: new { @id = "monthOptions" })
    @Html.DropDownListFor(x => Model.SelectedYear, new SelectList(Model.Years), htmlAttributes: new { @id = "yearOptions" })
    <table class="table table-bordered">
        <tr>
            <th>
                Date
            </th>
            <th>
                Type
            </th>
            <th>
                Description
            </th>
            <th>
                Amount
            </th>
        </tr>

        @foreach (var item in Model.Records)
        {
            <tr>
                <td>
                    @Html.Raw(item.DateOfTrans.ToString("d"))
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TypeOfTrans)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TransDescription)
                </td>
                <td>
                    $@Html.DisplayFor(modelItem => item.Amount)
                </td>
            </tr>
        }
    </table>
    
    
    `@if (Model.User != null)
    {
<th>
    Total:$@calcTotal() <button onclick="location.href='@Url.Action("Home", "Home", new {id = Model.User.UserID})'" id="goBackButton" type="button">Go Back</button>
</th>
    }
    else
    {
<th>
    Total: $@calcTotal() <button onclick="location.href='@Url.Action("Home", "Home" )'" id="goBackButton" type="button">Go Back</button>
</th>
    }
        
</div>

@functions
    {

    public double calcTotal()
    {
        double total = 0;
        foreach (var item in Model.Records)
        {

            double amount = 0;
            if (item.TypeOfTrans == "Expense")
            {
                amount = item.Amount * -1;
                total += amount;
            }
            else if (item.TypeOfTrans == "Income")
            {
                amount = item.Amount;
                total += amount;
            }
        }
        return total;
    }

}
